---
- name: Download ISO Files
  hosts: proxmox
  gather_facts: false
  vars_files:
    - "{{ lookup('env', 'HOME') }}/devops/github/homelab/IaC/ansible/inventory/group_vars/proxmox_isos.yaml"
  tasks:
    - name: Check if ISO file exists locally
      ansible.builtin.stat:
        path: "{{ lookup('env', 'downloads_directory') }}/{{ item.filename }}"
      with_items: "{{ iso_files }}"
      register: local_iso_stats
      delegate_to: localhost

    - name: Check if ISO file exists on target host
      ansible.builtin.stat:
        path: "{{ item.dest }}/{{ item.filename }}"
      with_items: "{{ iso_files }}"
      register: iso_stats

    - name: Copy ISO files from local machine if they exist and not on target host
      ansible.builtin.copy:
        src: "{{ lookup('env', 'downloads_directory') }}/{{ item.item.filename }}"
        dest: "{{ item.item.dest }}/{{ item.item.filename }}"
      when: item.stat.exists and not (iso_stats.results | selectattr('item.filename', 'equalto', item.item.filename) | map(attribute='stat.exists') | first)
      with_items: "{{ local_iso_stats.results }}"
      become: yes

    - name: Download ISO files if they do not exist
      ansible.builtin.get_url:
        url: "{{ item.item.url }}"
        dest: "{{ item.item.dest }}/{{ item.item.filename }}"
      when: not item.stat.exists
      with_items: "{{ iso_stats.results }}"
      become: yes

    - name: Ensure the ISOs have been downloaded
      ansible.builtin.stat:
        path: "{{ item.dest }}/{{ item.filename }}"
      with_items: "{{ iso_files }}"
      register: iso_stats_final

    - name: Fail if any ISO is missing
      ansible.builtin.fail:
        msg: "ISO copy or download failed for {{ item.item.dest }}/{{ item.item.filename }}"
      when: not item.stat.exists
      with_items: "{{ iso_stats_final.results }}"